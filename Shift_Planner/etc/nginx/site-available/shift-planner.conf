# /etc/nginx/sites-available/shift-planner.conf
server {
    listen 80 default_server;
    server_name _;

    # ACME challenge location (for certbot webroot)
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
    }

    # Simple health check
    location = /healthz {
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    # Temporarily proxy to Streamlit (plain HTTP)
    location / {
        proxy_pass http://127.0.0.1:8501;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto http;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
}
# Redirect HTTP -> HTTPS and serve ACME + health
server {
    listen 80;
    server_name example.com www.example.com;

    location /.well-known/acme-challenge/ { root /var/www/letsencrypt; }
    location = /healthz { add_header Content-Type text/plain; return 200 "ok\n"; }

    location / { return 301 https://$host$request_uri; }
}

# TLS server
server {
    listen 443 ssl http2;
    server_name example.com www.example.com;

    ssl_certificate     /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy strict-origin-when-cross-origin;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss image/svg+xml;

    location / {
        proxy_pass http://127.0.0.1:8501;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }

    location = /healthz { add_header Content-Type text/plain; return 200 "ok\n"; }
}

